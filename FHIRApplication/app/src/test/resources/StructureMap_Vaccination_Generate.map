map "https://com.psi.fhir/fhir/StructureMap/Vaccination_Prevanar13" = 'Vaccination Prevanar 13'

uses "http://hl7.org/fhir/StructureDefinition/QuestionnaireReponse" as source
uses "http://hl7.org/fhir/StructureDefinition/Bundle" as target
uses "http://hl7.org/fhir/StructureDefinition/Observation" as target

group QuestionnaireResponseToPatientMapping(source src : QuestionnaireResponse, target bundle: Bundle) {
    src -> bundle.id = uuid() "r_b_id";
    src -> bundle.type = 'collection' "r_bun_type";

    src -> bundle.entry as entry, entry.resource = create('Observation') as obs1 then {
     src -> bundle.entry as entry, entry.resource = create('Observation') as obs2 then
          ExtractObservationVaccinate(src, obs1), ExtractObservationNode(src, obs2) "r_bun_entries";
    } "r_bun_created";

    /* src -> bundle.entry as entry then
           ExtractObservationVaccinate(src, bundle), ExtractObservationNode(src, bundle) "r_bun_entries"; */

}

group ExtractObservationVaccinate(source src : QuestionnaireResponse, target obs : Observation) {
   src -> obs.id = uuid() "r_ob_id";
   src -> obs.status = "final" "r_ob_st";
   src -> obs.effective = evaluate(src, now()) "r_ob_eff";

   src -> obs.value = "Take the vaccine Prevenar 13." "r_ob_vvac";
}

group ExtractObservationNode(source src : QuestionnaireResponse, target obs : Observation) {
   src -> obs.id = uuid() "r_ob_id";
   src -> obs.status = "final" "r_ob_st";
   src -> obs.effective = evaluate(src, now()) "r_ob_eff";

   src.item as item_date where(linkId = 'vaccinationDate') -> obs.value = evaluate(item_date, $this.answer.value) 'r_obs_vnote';
}
